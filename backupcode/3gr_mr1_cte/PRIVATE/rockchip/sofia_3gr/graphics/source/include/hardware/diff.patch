diff --git a/include/hardware/gralloc.h b/include/hardware/gralloc.h
old mode 100644
new mode 100755
index 7d00114..1e64c58
--- a/include/hardware/gralloc.h
+++ b/include/hardware/gralloc.h
@@ -126,7 +126,7 @@ enum {
 
     /* buffer may be used as a cursor */
     GRALLOC_USAGE_CURSOR                = 0x00008000,
-
+	 GRALLOC_USAGE_ROT_MASK              = 0x0F000000,
     /* implementation-specific private usage flags */
     GRALLOC_USAGE_PRIVATE_0             = 0x10000000,
     GRALLOC_USAGE_PRIVATE_1             = 0x20000000,
diff --git a/include/hardware/hardware.h b/include/hardware/hardware.h
old mode 100644
new mode 100755
index 74f57aa..939b716
--- a/include/hardware/hardware.h
+++ b/include/hardware/hardware.h
@@ -25,6 +25,7 @@
 
 __BEGIN_DECLS
 
+#define RK_FBIOSET_CONFIG_DONE         0x4628
 /*
  * Value for the hw_module_t.tag field
  */
diff --git a/include/hardware/hwcomposer.h b/include/hardware/hwcomposer.h
old mode 100644
new mode 100755
index 3dfb4fd..caa5843
--- a/include/hardware/hwcomposer.h
+++ b/include/hardware/hwcomposer.h
@@ -47,6 +47,8 @@ __BEGIN_DECLS
  */
 #define HWC_HARDWARE_COMPOSER   "composer"
 
+#define	HWC_UNREFERENCED_PARAMETER(param) (param) = (param)
+
 typedef struct hwc_rect {
     int left;
     int top;
@@ -214,6 +216,20 @@ typedef struct hwc_layer_1 {
              * The visible region INCLUDES areas overlapped by a translucent layer.
              */
             hwc_region_t visibleRegionScreen;
+    		char LayerName[LayerNameLength + 1];
+
+			int32_t bufferCount;
+            int32_t bufferUpdate;
+            int32_t bufferChange;
+            int32_t dospecialflag;
+            int32_t alreadyStereo;
+            int32_t displayStereo;
+            int32_t exLeft;
+            int32_t exRight;
+            int32_t exAddrOffset;
+			uint32_t realtransform;
+			uint32_t direct_fd;
+			uint32_t direct_addr;
 
             /* Sync fence object that will be signaled when the buffer's
              * contents are available. May be -1 if the contents are already
@@ -417,6 +433,7 @@ typedef struct hwc_display_contents_1 {
      * performed by SurfaceFlinger.
      */
     uint32_t flags;
+    uint32_t skipflag;
     size_t numHwLayers;
     hwc_layer_1_t hwLayers[0];
 
@@ -587,6 +604,12 @@ typedef struct hwc_composer_device_1 {
     int (*set)(struct hwc_composer_device_1 *dev,
                 size_t numDisplays, hwc_display_contents_1_t** displays);
 
+	int (*fbPost2)(struct hwc_composer_device_1 *dev,size_t numDisplays, hwc_display_contents_1_t** displays);
+	int (*fbPost3)(struct hwc_composer_device_1 *dev,size_t numDisplays, hwc_display_contents_1_t** displays,buffer_handle_t buffer);
+    int (*layer_recover)(struct hwc_composer_device_1 *dev,
+                    size_t numDisplays, hwc_display_contents_1_t** displays);
+	int (*rkCopybit)(struct hwc_composer_device_1 *dev,buffer_handle_t src_handle,
+	                    buffer_handle_t dst_handle,int flag);
     /*
      * eventControl(..., event, enabled)
      * Enables or disables h/w composer events for a display.
diff --git a/include/hardware/hwcomposer_defs.h b/include/hardware/hwcomposer_defs.h
old mode 100644
new mode 100755
index 9a52436..9e99f87
--- a/include/hardware/hwcomposer_defs.h
+++ b/include/hardware/hwcomposer_defs.h
@@ -37,6 +37,11 @@ __BEGIN_DECLS
 #define HWC_DEVICE_API_VERSION_1_2  HARDWARE_DEVICE_API_VERSION_2(1, 2, HWC_HEADER_VERSION)
 #define HWC_DEVICE_API_VERSION_1_3  HARDWARE_DEVICE_API_VERSION_2(1, 3, HWC_HEADER_VERSION)
 #define HWC_DEVICE_API_VERSION_1_4  HARDWARE_DEVICE_API_VERSION_2(1, 4, HWC_HEADER_VERSION)
+#define HWC_BLENDING_DIM		0x0805
+#define HWC_BLENDING_CLEAR_HOLE          0x0806
+
+#define HWC_Layer_DEBUG
+#define LayerNameLength 60
 
 enum {
     /* hwc_composer_device_t::set failed in EGL */
@@ -115,7 +120,13 @@ enum {
        cursor overlay hardware. hwcomposer will also all async position updates
        of this layer outside of the normal prepare()/set() loop. Added in
        HWC_DEVICE_API_VERSION_1_4. */
-    HWC_CURSOR_OVERLAY =  5
+    HWC_CURSOR_OVERLAY =  5,
+    HWC_TOWIN0,
+    HWC_TOWIN1,
+    HWC_LCDC,
+    HWC_NODRAW,
+    HWC_MIX,
+    HWC_MIX_V2
  };
 /*
  * hwc_layer_t::blending values
diff --git a/include/hardware/power.h b/include/hardware/power.h
index af7799e..f0932ce 100644
--- a/include/hardware/power.h
+++ b/include/hardware/power.h
@@ -46,7 +46,9 @@ typedef enum {
      */
     POWER_HINT_VIDEO_ENCODE = 0x00000003,
     POWER_HINT_VIDEO_DECODE = 0x00000004,
-    POWER_HINT_LOW_POWER = 0x00000005
+    POWER_HINT_LOW_POWER = 0x00000005,
+    POWER_HINT_CPU_BOOST = 0x00000006,
+    POWER_HINT_PERFORMANCE_MODE = 0x00000007
 } power_hint_t;
 
 typedef enum {
