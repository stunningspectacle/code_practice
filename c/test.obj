
test:     file format elf64-x86-64


Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	e8 83 00 00 00       	callq  40048c <call_gmon_start>
  400409:	e8 12 01 00 00       	callq  400520 <frame_dummy>
  40040e:	e8 1d 03 00 00       	callq  400730 <__do_global_ctors_aux>
  400413:	48 83 c4 08          	add    $0x8,%rsp
  400417:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <printf@plt-0x10>:
  400420:	ff 35 ca 0b 20 00    	pushq  0x200bca(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 cc 0b 20 00    	jmpq   *0x200bcc(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <printf@plt>:
  400430:	ff 25 ca 0b 20 00    	jmpq   *0x200bca(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400440 <__libc_start_main@plt>:
  400440:	ff 25 c2 0b 20 00    	jmpq   *0x200bc2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400450 <malloc@plt>:
  400450:	ff 25 ba 0b 20 00    	jmpq   *0x200bba(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x28>
  400456:	68 02 00 00 00       	pushq  $0x2
  40045b:	e9 c0 ff ff ff       	jmpq   400420 <_init+0x20>

Disassembly of section .text:

0000000000400460 <_start>:
  400460:	31 ed                	xor    %ebp,%ebp
  400462:	49 89 d1             	mov    %rdx,%r9
  400465:	5e                   	pop    %rsi
  400466:	48 89 e2             	mov    %rsp,%rdx
  400469:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40046d:	50                   	push   %rax
  40046e:	54                   	push   %rsp
  40046f:	49 c7 c0 20 07 40 00 	mov    $0x400720,%r8
  400476:	48 c7 c1 90 06 40 00 	mov    $0x400690,%rcx
  40047d:	48 c7 c7 47 06 40 00 	mov    $0x400647,%rdi
  400484:	e8 b7 ff ff ff       	callq  400440 <__libc_start_main@plt>
  400489:	f4                   	hlt    
  40048a:	90                   	nop
  40048b:	90                   	nop

000000000040048c <call_gmon_start>:
  40048c:	48 83 ec 08          	sub    $0x8,%rsp
  400490:	48 8b 05 49 0b 20 00 	mov    0x200b49(%rip),%rax        # 600fe0 <_DYNAMIC+0x190>
  400497:	48 85 c0             	test   %rax,%rax
  40049a:	74 02                	je     40049e <call_gmon_start+0x12>
  40049c:	ff d0                	callq  *%rax
  40049e:	48 83 c4 08          	add    $0x8,%rsp
  4004a2:	c3                   	retq   
  4004a3:	90                   	nop
  4004a4:	90                   	nop
  4004a5:	90                   	nop
  4004a6:	90                   	nop
  4004a7:	90                   	nop
  4004a8:	90                   	nop
  4004a9:	90                   	nop
  4004aa:	90                   	nop
  4004ab:	90                   	nop
  4004ac:	90                   	nop
  4004ad:	90                   	nop
  4004ae:	90                   	nop
  4004af:	90                   	nop

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	55                   	push   %rbp
  4004b1:	48 89 e5             	mov    %rsp,%rbp
  4004b4:	53                   	push   %rbx
  4004b5:	48 83 ec 08          	sub    $0x8,%rsp
  4004b9:	80 3d 80 0b 20 00 00 	cmpb   $0x0,0x200b80(%rip)        # 601040 <completed.6531>
  4004c0:	75 4b                	jne    40050d <__do_global_dtors_aux+0x5d>
  4004c2:	bb 40 0e 60 00       	mov    $0x600e40,%ebx
  4004c7:	48 8b 05 7a 0b 20 00 	mov    0x200b7a(%rip),%rax        # 601048 <dtor_idx.6533>
  4004ce:	48 81 eb 38 0e 60 00 	sub    $0x600e38,%rbx
  4004d5:	48 c1 fb 03          	sar    $0x3,%rbx
  4004d9:	48 83 eb 01          	sub    $0x1,%rbx
  4004dd:	48 39 d8             	cmp    %rbx,%rax
  4004e0:	73 24                	jae    400506 <__do_global_dtors_aux+0x56>
  4004e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4004e8:	48 83 c0 01          	add    $0x1,%rax
  4004ec:	48 89 05 55 0b 20 00 	mov    %rax,0x200b55(%rip)        # 601048 <dtor_idx.6533>
  4004f3:	ff 14 c5 38 0e 60 00 	callq  *0x600e38(,%rax,8)
  4004fa:	48 8b 05 47 0b 20 00 	mov    0x200b47(%rip),%rax        # 601048 <dtor_idx.6533>
  400501:	48 39 d8             	cmp    %rbx,%rax
  400504:	72 e2                	jb     4004e8 <__do_global_dtors_aux+0x38>
  400506:	c6 05 33 0b 20 00 01 	movb   $0x1,0x200b33(%rip)        # 601040 <completed.6531>
  40050d:	48 83 c4 08          	add    $0x8,%rsp
  400511:	5b                   	pop    %rbx
  400512:	5d                   	pop    %rbp
  400513:	c3                   	retq   
  400514:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40051b:	00 00 00 00 00 

0000000000400520 <frame_dummy>:
  400520:	48 83 3d 20 09 20 00 	cmpq   $0x0,0x200920(%rip)        # 600e48 <__JCR_END__>
  400527:	00 
  400528:	55                   	push   %rbp
  400529:	48 89 e5             	mov    %rsp,%rbp
  40052c:	74 12                	je     400540 <frame_dummy+0x20>
  40052e:	b8 00 00 00 00       	mov    $0x0,%eax
  400533:	48 85 c0             	test   %rax,%rax
  400536:	74 08                	je     400540 <frame_dummy+0x20>
  400538:	5d                   	pop    %rbp
  400539:	bf 48 0e 60 00       	mov    $0x600e48,%edi
  40053e:	ff e0                	jmpq   *%rax
  400540:	5d                   	pop    %rbp
  400541:	c3                   	retq   
  400542:	90                   	nop
  400543:	90                   	nop

0000000000400544 <func>:
  400544:	55                   	push   %rbp
  400545:	48 89 e5             	mov    %rsp,%rbp
  400548:	48 83 ec 30          	sub    $0x30,%rsp
  40054c:	89 7d dc             	mov    %edi,-0x24(%rbp)
  40054f:	89 75 d8             	mov    %esi,-0x28(%rbp)
  400552:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  400555:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  400558:	bf 0a 00 00 00       	mov    $0xa,%edi
  40055d:	e8 ee fe ff ff       	callq  400450 <malloc@plt>
  400562:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400566:	b8 7c 07 40 00       	mov    $0x40077c,%eax
  40056b:	be 08 00 00 00       	mov    $0x8,%esi
  400570:	48 89 c7             	mov    %rax,%rdi
  400573:	b8 00 00 00 00       	mov    $0x0,%eax
  400578:	e8 b3 fe ff ff       	callq  400430 <printf@plt>
  40057d:	b8 94 07 40 00       	mov    $0x400794,%eax
  400582:	48 8d 55 dc          	lea    -0x24(%rbp),%rdx
  400586:	48 89 d6             	mov    %rdx,%rsi
  400589:	48 89 c7             	mov    %rax,%rdi
  40058c:	b8 00 00 00 00       	mov    $0x0,%eax
  400591:	e8 9a fe ff ff       	callq  400430 <printf@plt>
  400596:	b8 a7 07 40 00       	mov    $0x4007a7,%eax
  40059b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  40059f:	48 89 d6             	mov    %rdx,%rsi
  4005a2:	48 89 c7             	mov    %rax,%rdi
  4005a5:	b8 00 00 00 00       	mov    $0x0,%eax
  4005aa:	e8 81 fe ff ff       	callq  400430 <printf@plt>
  4005af:	b8 ba 07 40 00       	mov    $0x4007ba,%eax
  4005b4:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
  4005b8:	48 89 d6             	mov    %rdx,%rsi
  4005bb:	48 89 c7             	mov    %rax,%rdi
  4005be:	b8 00 00 00 00       	mov    $0x0,%eax
  4005c3:	e8 68 fe ff ff       	callq  400430 <printf@plt>
  4005c8:	b8 cd 07 40 00       	mov    $0x4007cd,%eax
  4005cd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4005d1:	48 89 d6             	mov    %rdx,%rsi
  4005d4:	48 89 c7             	mov    %rax,%rdi
  4005d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005dc:	e8 4f fe ff ff       	callq  400430 <printf@plt>
  4005e1:	b8 e0 07 40 00       	mov    $0x4007e0,%eax
  4005e6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4005ea:	48 89 d6             	mov    %rdx,%rsi
  4005ed:	48 89 c7             	mov    %rax,%rdi
  4005f0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005f5:	e8 36 fe ff ff       	callq  400430 <printf@plt>
  4005fa:	b8 f3 07 40 00       	mov    $0x4007f3,%eax
  4005ff:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  400603:	48 89 d6             	mov    %rdx,%rsi
  400606:	48 89 c7             	mov    %rax,%rdi
  400609:	b8 00 00 00 00       	mov    $0x0,%eax
  40060e:	e8 1d fe ff ff       	callq  400430 <printf@plt>
  400613:	b8 06 08 40 00       	mov    $0x400806,%eax
  400618:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40061c:	48 89 d6             	mov    %rdx,%rsi
  40061f:	48 89 c7             	mov    %rax,%rdi
  400622:	b8 00 00 00 00       	mov    $0x0,%eax
  400627:	e8 04 fe ff ff       	callq  400430 <printf@plt>
  40062c:	b8 19 08 40 00       	mov    $0x400819,%eax
  400631:	48 8d 55 fc          	lea    -0x4(%rbp),%rdx
  400635:	48 89 d6             	mov    %rdx,%rsi
  400638:	48 89 c7             	mov    %rax,%rdi
  40063b:	b8 00 00 00 00       	mov    $0x0,%eax
  400640:	e8 eb fd ff ff       	callq  400430 <printf@plt>
  400645:	c9                   	leaveq 
  400646:	c3                   	retq   

0000000000400647 <main>:
  400647:	55                   	push   %rbp
  400648:	48 89 e5             	mov    %rsp,%rbp
  40064b:	48 83 ec 10          	sub    $0x10,%rsp
  40064f:	b8 2c 08 40 00       	mov    $0x40082c,%eax
  400654:	be 47 06 40 00       	mov    $0x400647,%esi
  400659:	48 89 c7             	mov    %rax,%rdi
  40065c:	b8 00 00 00 00       	mov    $0x0,%eax
  400661:	e8 ca fd ff ff       	callq  400430 <printf@plt>
  400666:	b9 43 00 00 00       	mov    $0x43,%ecx
  40066b:	ba 2d 00 00 00       	mov    $0x2d,%edx
  400670:	be 22 00 00 00       	mov    $0x22,%esi
  400675:	bf 7b 00 00 00       	mov    $0x7b,%edi
  40067a:	e8 c5 fe ff ff       	callq  400544 <func>
  40067f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400682:	b8 00 00 00 00       	mov    $0x0,%eax
  400687:	c9                   	leaveq 
  400688:	c3                   	retq   
  400689:	90                   	nop
  40068a:	90                   	nop
  40068b:	90                   	nop
  40068c:	90                   	nop
  40068d:	90                   	nop
  40068e:	90                   	nop
  40068f:	90                   	nop

0000000000400690 <__libc_csu_init>:
  400690:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400695:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40069a:	48 8d 2d 83 07 20 00 	lea    0x200783(%rip),%rbp        # 600e24 <__init_array_end>
  4006a1:	4c 8d 25 7c 07 20 00 	lea    0x20077c(%rip),%r12        # 600e24 <__init_array_end>
  4006a8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4006ad:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4006b2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4006b7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4006bc:	48 83 ec 38          	sub    $0x38,%rsp
  4006c0:	4c 29 e5             	sub    %r12,%rbp
  4006c3:	41 89 fd             	mov    %edi,%r13d
  4006c6:	49 89 f6             	mov    %rsi,%r14
  4006c9:	48 c1 fd 03          	sar    $0x3,%rbp
  4006cd:	49 89 d7             	mov    %rdx,%r15
  4006d0:	e8 2b fd ff ff       	callq  400400 <_init>
  4006d5:	48 85 ed             	test   %rbp,%rbp
  4006d8:	74 1c                	je     4006f6 <__libc_csu_init+0x66>
  4006da:	31 db                	xor    %ebx,%ebx
  4006dc:	0f 1f 40 00          	nopl   0x0(%rax)
  4006e0:	4c 89 fa             	mov    %r15,%rdx
  4006e3:	4c 89 f6             	mov    %r14,%rsi
  4006e6:	44 89 ef             	mov    %r13d,%edi
  4006e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006ed:	48 83 c3 01          	add    $0x1,%rbx
  4006f1:	48 39 eb             	cmp    %rbp,%rbx
  4006f4:	75 ea                	jne    4006e0 <__libc_csu_init+0x50>
  4006f6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4006fb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400700:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400705:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40070a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40070f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400714:	48 83 c4 38          	add    $0x38,%rsp
  400718:	c3                   	retq   
  400719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400720 <__libc_csu_fini>:
  400720:	f3 c3                	repz retq 
  400722:	90                   	nop
  400723:	90                   	nop
  400724:	90                   	nop
  400725:	90                   	nop
  400726:	90                   	nop
  400727:	90                   	nop
  400728:	90                   	nop
  400729:	90                   	nop
  40072a:	90                   	nop
  40072b:	90                   	nop
  40072c:	90                   	nop
  40072d:	90                   	nop
  40072e:	90                   	nop
  40072f:	90                   	nop

0000000000400730 <__do_global_ctors_aux>:
  400730:	55                   	push   %rbp
  400731:	48 89 e5             	mov    %rsp,%rbp
  400734:	53                   	push   %rbx
  400735:	48 83 ec 08          	sub    $0x8,%rsp
  400739:	48 8b 05 e8 06 20 00 	mov    0x2006e8(%rip),%rax        # 600e28 <__CTOR_LIST__>
  400740:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400744:	74 19                	je     40075f <__do_global_ctors_aux+0x2f>
  400746:	bb 28 0e 60 00       	mov    $0x600e28,%ebx
  40074b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400750:	48 83 eb 08          	sub    $0x8,%rbx
  400754:	ff d0                	callq  *%rax
  400756:	48 8b 03             	mov    (%rbx),%rax
  400759:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40075d:	75 f1                	jne    400750 <__do_global_ctors_aux+0x20>
  40075f:	48 83 c4 08          	add    $0x8,%rsp
  400763:	5b                   	pop    %rbx
  400764:	5d                   	pop    %rbp
  400765:	c3                   	retq   
  400766:	90                   	nop
  400767:	90                   	nop

Disassembly of section .fini:

0000000000400768 <_fini>:
  400768:	48 83 ec 08          	sub    $0x8,%rsp
  40076c:	e8 3f fd ff ff       	callq  4004b0 <__do_global_dtors_aux>
  400771:	48 83 c4 08          	add    $0x8,%rsp
  400775:	c3                   	retq   
