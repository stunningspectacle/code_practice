diff --git a/drivers/misc/apds990x.c b/drivers/misc/apds990x.c
index f9c83f7..cc57477 100644
--- a/drivers/misc/apds990x.c
+++ b/drivers/misc/apds990x.c
@@ -453,7 +453,7 @@ static int apds990x_calc_again(struct apds990x_chip *chip)
 	if (ret < 0)
 		apds990x_force_a_refresh(chip);
 	else {
-		chip->lux_thres_lo = chip->lux_raw / APDS990X_LUX_OUTPUT_SCALE;
+		chip->lux_thres_lo = chip->lux_raw;
 		chip->lux_thres_hi = chip->lux_thres_lo + 1;
 		apds990x_refresh_athres(chip);
 	}
@@ -499,7 +499,9 @@ static int apds990x_get_lux(struct apds990x_chip *chip, int clear, int ir)
 	iac = max(iac1, iac2);
 	iac = max(iac, 0);
 
-	lpc = APDS990X_LUX_OUTPUT_SCALE * (chip->cf.df * chip->cf.ga) /
+	//lpc = APDS990X_LUX_OUTPUT_SCALE * (chip->cf.df * chip->cf.ga) /
+	//	(u32)(again[chip->again_meas] * (u32)chip->atime);
+	lpc = (chip->cf.df * chip->cf.ga) /
 		(u32)(again[chip->again_meas] * (u32)chip->atime);
 
 	dev_dbg(&chip->client->dev, "iac1=%d, iac2=%d, iac=%d, lpc=%u\n",
@@ -528,8 +530,6 @@ static int apds990x_ack_int(struct apds990x_chip *chip, u8 mode)
 	ret = i2c_smbus_read_byte_data(client, reg);
 	return (int)ret;
 }
-
-/* mutex must be held when calling this function */
 static void als_handle_irq(struct apds990x_chip *chip)
 {
 	struct alsps_client *client;
@@ -981,9 +981,13 @@ als_read(struct file *filep, char __user *buffer, size_t size, loff_t *offset)
 
 	mutex_lock(&chip->mutex);
 	if (chip->alsps_switch & APDS_ALS_ENABLE) {
+		/*
 		lux =
 		min((u32)((chip->lux * chip->lux_calib) / APDS_CALIB_SCALER),
 			(u32)(APDS_RANGE * APDS990X_LUX_OUTPUT_SCALE));
+		*/
+		lux = chip->lux * chip->lux_calib / APDS_CALIB_SCALER;
+		lux = min(lux, APDS_RANGE) * APDS990X_LUX_OUTPUT_SCALE;
 
 		clear_bit(ALS_DATA_READY, &client->status);
 		if (copy_to_user(buffer, &lux, sizeof(lux)))
