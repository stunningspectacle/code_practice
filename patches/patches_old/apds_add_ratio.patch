diff --git a/drivers/misc/apds990x.c b/drivers/misc/apds990x.c
index 046f42f..759b7c3 100644
--- a/drivers/misc/apds990x.c
+++ b/drivers/misc/apds990x.c
@@ -115,6 +115,8 @@
 #define APDS_PDIODE_IR	       0x2
 
 #define APDS990X_LUX_OUTPUT_SCALE 10
+#define APDS990X_CH1_CH0_ABN_RATIO 1229
+#define APDS990X_CH1_CH0_MAX_RATIO 2253
 
 #define APDS_POWER_DOWN        (0)
 #define APDS_POWER_ON          (1)
@@ -158,6 +160,7 @@ struct apds990x_chip {
 	/* Chip parameters */
 	struct	apds990x_chip_factors	cf;
 	struct	reverse_factors		rcf;
+	int	irfactor;
 	u16	atime;		/* als integration time */
 	u16	arate;		/* als reporting rate */
 	u16	a_max_result;	/* Max possible ADC value with current atime */
@@ -461,6 +464,29 @@ static int apds990x_get_lux(struct apds990x_chip *chip, int clear, int ir)
 {
 	int iac, iac1, iac2; /* IR adjusted counts */
 	u32 lpc; /* Lux per count */
+	int ratio;
+
+	if (clear == 0)
+		return 0;
+	/* If CH1/CH0 > 0.3 that means an abnormal incandescent light source
+	 * is detected and is very close to the sensor, we need to reduce the
+	 * IR factor to get the correct lux value
+	 * Formulas:
+	 * ratio = CH1/CH0
+	 * IR Factor = 1 - (6/11 * ratio) when 0.3 < ratio < 0.55
+	 * IR Factor = 0 when ratio >= 0.55
+	 */
+	ratio = (ir * APDS_PARAM_SCALE) / clear;
+	if (ratio > APDS990X_CH1_CH0_ABN_RATIO) {
+		if (ratio >= APDS990X_CH1_CH0_MAX_RATIO) {
+			chip->irfactor = 0;
+			ir = 0;
+		} else {
+			chip->irfactor = APDS_PARAM_SCALE - 6 * ratio / 11;
+			ir = ir * chip->irfactor / APDS_PARAM_SCALE;
+		}
+		chip->lux_ir = ir;
+	}
 
 	/* Formulas:
 	 * iac1 = CF1 * CLEAR_CH - IRF1 * IR_CH
