From a32c763a215272b7ecfad2f2f604750dc1eabaef Mon Sep 17 00:00:00 2001
From: Wenlong Zhuang <daisen.zhuang@rock-chips.com>
Date: Mon, 4 May 2015 17:08:09 +0800
Subject: [PATCH] leds: add of_find_led_classdev_by_node()

This function finds the struct led_classdev for a given device tree
node. A dummy function is provided so that it safely compiles out if OF
support is disabled.

Signed-off-by: Wenlong Zhuang <daisen.zhuang@rock-chips.com>
---
 drivers/leds/led-class.c |   29 +++++++++++++++++++++++++++++
 include/linux/leds.h     |   10 ++++++++++
 2 files changed, 39 insertions(+)

diff --git a/drivers/leds/led-class.c b/drivers/leds/led-class.c
index 4522503..d810f71 100644
--- a/drivers/leds/led-class.c
+++ b/drivers/leds/led-class.c
@@ -303,6 +303,35 @@ void led_classdev_unregister(struct led_classdev *led_cdev)
 }
 EXPORT_SYMBOL_GPL(led_classdev_unregister);
 
+#ifdef CONFIG_OF
+static int of_parent_match(struct device *dev, const void *data)
+{
+	return dev->parent && dev->parent->of_node == data;
+}
+
+/**
+ * of_find_led_classdev_by_node() - find led classdev by device-tree node
+ * @node: device-tree node of the led classdev device
+ *
+ * Returns a pointer to the led classdev corresponding to the given DT
+ * node or NULL if no such led classdev exists or if the device hasn't
+ * been probed yet.
+ *
+ * This function obtains a reference on the led classdev and it is the
+ * caller's responsibility to drop the reference by calling put_device() on
+ * the led classdev's .dev field.
+ */
+struct led_classdev *of_find_led_classdev_by_node(struct device_node *node)
+{
+	struct device *dev;
+
+	dev = class_find_device(leds_class, NULL, node, of_parent_match);
+
+	return dev ? dev_get_drvdata(dev) : NULL;
+}
+EXPORT_SYMBOL(of_find_led_classdev_by_node);
+#endif
+
 static int __init leds_init(void)
 {
 	leds_class = class_create(THIS_MODULE, "leds");
diff --git a/include/linux/leds.h b/include/linux/leds.h
index 5b36157..6492969 100644
--- a/include/linux/leds.h
+++ b/include/linux/leds.h
@@ -290,4 +290,14 @@ static inline void ledtrig_cpu(enum cpu_led_event evt)
 }
 #endif
 
+#ifdef CONFIG_OF
+struct led_classdev *of_find_led_classdev_by_node(struct device_node *node);
+#else
+static inline struct led_classdev *
+of_find_led_classdev_by_node(struct device_node *node)
+{
+	return NULL;
+}
+#endif
+
 #endif		/* __LINUX_LEDS_H_INCLUDED */
-- 
1.7.9.5

