diff --git a/arch/x86/boot/dts/SF_LTE-mrd6-p0.dts b/arch/x86/boot/dts/SF_LTE-mrd6-p0.dts
index 24ecefd..0806050 100644
--- a/arch/x86/boot/dts/SF_LTE-mrd6-p0.dts
+++ b/arch/x86/boot/dts/SF_LTE-mrd6-p0.dts
@@ -63,8 +63,8 @@
 		intel,gpu-shared-mem = <0x20000000>;
 		intel,dcc-fbpixelformat= "RGB888";
 		intel,dcc-debug-level = <1>;
-#ifdef RECOVERY_KERNEL
 		intel,fb-api = <1>;
+#ifdef RECOVERY_KERNEL
 		intel,dcc-mem = < 0x00800000 >;
 #else
 		intel,dcc-use-fences = <1>;
@@ -74,6 +74,7 @@
 		intel,display-fps = <60>;
 		intel,display-ramless = <1>;
 		intel,display-preinit = <0>;
+		intel,display-bootinit = <1>;
 		intel,display-if = <&mipi_dsi>;
 		intel,display-if-rate = <390000000>;
 		lcd-supply = <&pm_lcd>;
diff --git a/arch/x86/boot/dts/SF_LTE-mrd6-p1.dts b/arch/x86/boot/dts/SF_LTE-mrd6-p1.dts
index 71e64ed..b61f5d3 100644
--- a/arch/x86/boot/dts/SF_LTE-mrd6-p1.dts
+++ b/arch/x86/boot/dts/SF_LTE-mrd6-p1.dts
@@ -77,8 +77,8 @@
 		intel,gpu-shared-mem = <0x20000000>;
 		intel,dcc-fbpixelformat= "RGB888";
 		intel,dcc-debug-level = <1>;
-#ifdef RECOVERY_KERNEL
 		intel,fb-api = <1>;
+#ifdef RECOVERY_KERNEL
 		intel,dcc-mem = < 0x00800000 >;
 #else
 		intel,dcc-use-fences = <1>;
@@ -89,6 +89,7 @@
 		intel,display-fps = <60>;
 		intel,display-ramless = <1>;
 		intel,display-preinit = <0>;
+		intel,display-bootinit = <1>;
 		intel,display-if = <&mipi_dsi>;
 		intel,display-if-rate = <375000000>;
 		/include/ "xgold/display/HX8394.dtsi"
diff --git a/arch/x86/configs/i386_sofia_defconfig b/arch/x86/configs/i386_sofia_defconfig
index 588675c..57596a6 100644
--- a/arch/x86/configs/i386_sofia_defconfig
+++ b/arch/x86/configs/i386_sofia_defconfig
@@ -2180,7 +2180,7 @@ CONFIG_FB_MODE_HELPERS=y
 # CONFIG_EXYNOS_VIDEO is not set
 CONFIG_XGOLD_DCC=y
 CONFIG_XGOLD_DCC_SYSFS=y
-# CONFIG_XGOLD_DCC_DEBUG is not set
+CONFIG_XGOLD_DCC_DEBUG=y
 CONFIG_TRANSMITTER_LVDS=y
 CONFIG_XGOLD_MIPI_DSI=y
 CONFIG_FB_ROCKCHIP=y
@@ -3677,3 +3677,5 @@ CONFIG_CLZ_TAB=y
 # CONFIG_DDR is not set
 CONFIG_MPILIB=y
 CONFIG_OID_REGISTRY=y
+#CONFIG_LOGO=y
+#CONFIG_LOGO_SOFIA_LTE_CLUT224=y
diff --git a/drivers/video/xgold/dcc/dcc-core.c b/drivers/video/xgold/dcc/dcc-core.c
index beeb0d3..1e30678 100644
--- a/drivers/video/xgold/dcc/dcc-core.c
+++ b/drivers/video/xgold/dcc/dcc-core.c
@@ -279,8 +279,10 @@ int dcc_core_probe(struct platform_device *pdev)
 			pdata->mem.pbase, pdata->mem.size,
 			(unsigned)pdata->mem.vbase);
 
-	/* setup hardware: DCC*/
-	dcc_core_hwstart(pdata);
+	if (!pdata->display_boot_initialized) {
+		/* setup hardware: DCC*/
+		dcc_core_hwstart(pdata);
+	}
 	/* Read DCC revision number */
 	gra_read_field(pdata, EXR_DIF_ID_NUMBER, &pdata->id);
 
@@ -326,15 +328,23 @@ int dcc_core_probe(struct platform_device *pdev)
 	}
 
 	xgold_noc_qos_set("DCC2");
-	dcc_display_setup(pdata);
+	//dcc_display_setup(pdata);
 
 	if (pdata->display_invert_composite)
 		dcc_invert_RGB_composite(pdata);
-
+	//---------------------------------------------
+	if (pdata->display_boot_initialized) {
+		dcc_display_setup_again(pdata);
+	}
+	else{
+		dcc_display_setup(pdata);
+		dcc_core_hwsetup(pdata);
+	}
+	//---------------------------------------------
 	dcc_boot_info("Display device %dx%d %s\n",
 			pdata->display.xres, pdata->display.yres,
 			dcc_format_name(pdata->fbfmt));
-	dcc_core_hwsetup(pdata);
+	//dcc_core_hwsetup(pdata);
 
 	dcc_boot_info("HWID 0x%x / DCC@%d MHz / %dMB RAM [0x%08x->0x%p]\n",
 			pdata->id, pdata->clk_rate/1000/1000,
diff --git a/drivers/video/xgold/dcc/dcc-core.h b/drivers/video/xgold/dcc/dcc-core.h
index fa23696..2cc605c 100644
--- a/drivers/video/xgold/dcc/dcc-core.h
+++ b/drivers/video/xgold/dcc/dcc-core.h
@@ -246,6 +246,8 @@ struct dcc_drvdata {
 	int use_fbapi;
 	int fbapi_nr_buffers;
 	int display_preinit;
+	int display_bootinit;/////////
+	int display_boot_initialized;////////
 	int dcc_sprite2_unified;
 	int display_autorefresh;
 	int display_invert_composite;
@@ -367,6 +369,7 @@ int dcc_hal_remove(struct dcc_drvdata *pdata);
 int dcc_interrupt_setup(struct dcc_drvdata *pdata);
 
 int dcc_display_setup(struct dcc_drvdata *pdata);
+int dcc_display_setup_again(struct dcc_drvdata *pdata);
 int dcc_display_suspend(struct dcc_drvdata *pdata);
 int dcc_display_resume(struct dcc_drvdata *pdata);
 
diff --git a/drivers/video/xgold/dcc/dcc-dts.c b/drivers/video/xgold/dcc/dcc-dts.c
index 61471bf..3bfb765 100644
--- a/drivers/video/xgold/dcc/dcc-dts.c
+++ b/drivers/video/xgold/dcc/dcc-dts.c
@@ -337,6 +337,12 @@ int dcc_of_parse_graphics(struct platform_device *pdev,
 	if (ret < 0)
 		pdata->display_preinit = 0;
 
+	/* disable driver screen operations */
+	ret = of_property_read_u32(ngraphics, "intel,display-bootinit",
+			&pdata->display_bootinit);
+	if (ret < 0)
+		pdata->display_bootinit = 0;
+
 	/* debug */
 	ret = of_property_read_u32(ngraphics, "intel,dcc-debug-level",
 			&pdata->debug.level);
diff --git a/drivers/video/xgold/dcc/dcc-lcd.c b/drivers/video/xgold/dcc/dcc-lcd.c
index 7c36db3..89e713a 100644
--- a/drivers/video/xgold/dcc/dcc-lcd.c
+++ b/drivers/video/xgold/dcc/dcc-lcd.c
@@ -47,6 +47,31 @@ void dcc_display_reset(int gpio, struct dcc_display *lcd)
 	}
 }
 
+int dcc_display_setup_again(struct dcc_drvdata *pdata)
+{
+	struct dcc_display *lcd = &pdata->display;
+	int err = 0;
+	lcd->panel_reset = dcc_display_reset;
+	/**
+	 * Display interface configuration
+	 */
+	if (DISPLAY_IS_MIPI_DBI_IF(lcd->dif.type))
+		err = dcc_dbi_probe(lcd);
+	else if (DISPLAY_IS_MIPI_DSI_IF(lcd->dif.type))
+		err = dcc_dsi_probe(lcd);
+	else
+		goto error;
+
+	if ((lcd->dif_config == NULL) || (lcd->panel_init == NULL))
+		goto error;
+	dcc_boot_dbg("Display_Interface loaded successfully again!\n");
+	return 0;
+error:
+	dcc_err("Display setup failed\n");
+	return -EINVAL;
+}
+
+
 int dcc_display_setup(struct dcc_drvdata *pdata)
 {
 	struct dcc_display *lcd = &pdata->display;
@@ -99,7 +124,11 @@ int dcc_display_setup(struct dcc_drvdata *pdata)
 		}
 		gra_write_field(pdata, EXR_DIF_RUNCTRL, DCC_MODE_RUN);
 	}
-	pdata->display_preinit = 0;
+	pdata->display_preinit = 0;///added
 	dcc_boot_dbg("Display_Interface loaded successfully!\n");
 	return 0;
 error:
diff --git a/drivers/video/xgold/dcc/dcc-main.c b/drivers/video/xgold/dcc/dcc-main.c
index e89d44f..4c9a1d6 100644
--- a/drivers/video/xgold/dcc/dcc-main.c
+++ b/drivers/video/xgold/dcc/dcc-main.c
@@ -957,7 +957,9 @@ int dcc_main_probe(struct platform_device *pdev)
 	struct resource *res;
 	resource_size_t res_size;
 	struct dcc_drvdata *pdata;
-
+	unsigned int stat = 0;
+	unsigned int pllstat;
+    
 	/* Allocate driver data record */
 	pdata = devm_kzalloc(&pdev->dev,
 			sizeof(struct dcc_drvdata), GFP_KERNEL);
@@ -975,7 +977,10 @@ int dcc_main_probe(struct platform_device *pdev)
 	pdata->debug.boot = 1;
 	pdata->drv_suspend = dcc_main_suspend;
 	pdata->drv_resume = dcc_main_resume;
-
+	/* it is depend on dts and pll check */
+	pdata->display_bootinit = 0;
+	pdata->display_boot_initialized = 0;
+    
 	/* Map registers */
 	res = platform_get_resource_byname(pdev,
 			IORESOURCE_MEM, "registers");
@@ -1007,13 +1012,16 @@ int dcc_main_probe(struct platform_device *pdev)
 		 DCCDRV_VERSION_STR, __DATE__, __TIME__);
 
 	DCC_DBG2("DCC Driver configuration:\n");
-	if (pdata->display_autorefresh)
+	//if (pdata->display_autorefresh)
 		dcc_boot_info("\t%s: display auto refresh\n",
 			pdata->display_autorefresh ? "ON " : "OFF");
-	if (pdata->display_preinit)
+	//if (pdata->display_preinit)
 		dcc_boot_info("\t%s: display pre-init\n",
 			pdata->display_preinit ? "ON " : "OFF");
-	if (pdata->use_fences)
+
+		dcc_boot_info("\t%s: display boot-init\n",
+			pdata->display_bootinit ? "enable " : "disable");
+	//if (pdata->use_fences)
 		dcc_boot_info("\t%s: use fences\n",
 			pdata->use_fences ? "ON " : "OFF");
 
@@ -1045,16 +1053,28 @@ int dcc_main_probe(struct platform_device *pdev)
 	}
 #endif
 
+	if (pdata->display_bootinit) {
+		pllstat = BITFLDS(EXR_DIF_STAT_DSILOCK, 1);
+		gra_read_field(pdata, EXR_DIF_STAT, &stat);
+		if ((stat & pllstat) == pllstat) {
+			pdata->display_boot_initialized = 1;
+			dcc_boot_info("0x%x,display is initialized in bootsystem\n",
+				stat);
+		}
+	}
+
 	ret = dcc_core_probe(pdev);
 	if (ret) {
 		dcc_err("Failed to initialize hardware(%d)", ret);
 		goto exit;
 	}
-	/* display boot animation */
-	dcc_clearscreen(pdata);
+	if (!pdata->display_boot_initialized) {
+		/* display boot animation */
+		dcc_clearscreen(pdata);
 
-	if (pdata->test.bootscreen)
-		dcc_bootscreen(pdata);
+		if (pdata->test.bootscreen)
+			dcc_bootscreen(pdata);
+	}
 
 	pdata->devfile.minor = MISC_DYNAMIC_MINOR;
 	pdata->devfile.name = DCC_DRIVER_NAME;
