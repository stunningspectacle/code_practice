diff --git a/driver/src/egl/egl_config.c b/driver/src/egl/egl_config.c
index c1da7f5..2fe7499 100644
--- a/driver/src/egl/egl_config.c
+++ b/driver/src/egl/egl_config.c
@@ -1165,7 +1165,7 @@ EGLBoolean _egl_choose_config(EGLDisplay __dpy,
 	if (EGL_DONT_CARE != config.config_id)
 	{
 		/* find config id in configs */
-		if (config_size >= 1)
+		if (config_size >= 1 || NULL == __configs)
 		{
 			EGLConfig config_by_id;
 
diff --git a/driver/src/shared/binary_shader/bs_symbol.c b/driver/src/shared/binary_shader/bs_symbol.c
index 29a465f..a667a3c 100644
--- a/driver/src/shared/binary_shader/bs_symbol.c
+++ b/driver/src/shared/binary_shader/bs_symbol.c
@@ -340,7 +340,7 @@ MALI_STATIC struct bs_symbol *recursive_lookup_symbol(struct bs_symbol_table *ta
 
 			/* in addition to strncmp we need to check if symbol has a terminating zero at position 'namelen'
 			 * and that the symbol found is a struct */
-			if (_mali_sys_memcmp(name, table->members[i]->name, symbol_namelen) == 0 &&
+			if (_mali_sys_strncmp(name, table->members[i]->name, symbol_namelen) == 0 &&
 			        table->members[i]->name[symbol_namelen] == '\0')
 			{
 				MALI_DEBUG_ASSERT(symbol_namelen != 0, ("We found a match for a symbol without any name. What?"));
