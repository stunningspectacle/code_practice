diff --git a/include/system/graphics.h b/include/system/graphics.h
index bab4cc3..32c37f8 100644
--- a/include/system/graphics.h
+++ b/include/system/graphics.h
@@ -58,6 +58,7 @@ enum {
     HAL_PIXEL_FORMAT_RGB_565            = 4,
     HAL_PIXEL_FORMAT_BGRA_8888          = 5,
 
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
      /*
      * sRGB color pixel formats:
      *
@@ -78,7 +79,8 @@ enum {
      *
      */
     HAL_PIXEL_FORMAT_sRGB_A_8888        = 0xC,
-    HAL_PIXEL_FORMAT_sRGB_X_888           = 0xD,
+    HAL_PIXEL_FORMAT_sRGB_X_888         = 0xD,
+#endif
 
     /*
      * 0x100 - 0x1FF
@@ -463,12 +465,14 @@ enum {
     HAL_PIXEL_FORMAT_YCrCb_420_SP       = 0x11, // NV21
     HAL_PIXEL_FORMAT_YCbCr_422_I        = 0x14, // YUY2
 
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
     /* Legacy formats (deprecated), used by ImageFormat.java */
     HAL_PIXEL_FORMAT_YCrCb_NV12         = 0x15, // YUY2
     HAL_PIXEL_FORMAT_YCrCb_NV12_VIDEO   = 0x16,
     HAL_PIXEL_FORMAT_YCrCb_NV12_10      = 0x17, // YUY2_1obit
     HAL_PIXEL_FORMAT_YCbCr_422_SP_10    = 0x18, //
     HAL_PIXEL_FORMAT_YCrCb_420_SP_10    = 0x19, //
+#endif
 
 };
 
diff --git a/libion/Android.mk b/libion/Android.mk
index 97a08ff..c9f8446 100644
--- a/libion/Android.mk
+++ b/libion/Android.mk
@@ -1,5 +1,9 @@
 LOCAL_PATH := $(call my-dir)
 
+ifeq ($(ROCKCHIP_GPU_LIB_ENABLE),true)
+LOCAL_CFLAGS += -DROCKCHIP_GPU_LIB_ENABLE
+endif
+
 include $(CLEAR_VARS)
 LOCAL_SRC_FILES := ion.c
 LOCAL_MODULE := libion
diff --git a/libion/include/ion/ion.h b/libion/include/ion/ion.h
index b55d5d3..b48da3b 100644
--- a/libion/include/ion/ion.h
+++ b/libion/include/ion/ion.h
@@ -40,9 +40,13 @@ int ion_map(int fd, ion_user_handle_t handle, size_t length, int prot,
             int flags, off_t offset, unsigned char **ptr, int *map_fd);
 int ion_share(int fd, ion_user_handle_t handle, int *share_fd);
 int ion_import(int fd, int share_fd, ion_user_handle_t *handle);
+
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
 int ion_get_phys(int fd, ion_user_handle_t handle, unsigned long *phys);
 int ion_secure_alloc(int fd, size_t len, unsigned long *phys);
 int ion_secure_free(int fd, size_t len, unsigned long phys);
+#endif
+
 __END_DECLS
 
 #endif /* __SYS_CORE_ION_H */
diff --git a/libion/ion.c b/libion/ion.c
index fbb3c26..3a54a6a 100644
--- a/libion/ion.c
+++ b/libion/ion.c
@@ -28,7 +28,10 @@
 #include <sys/mman.h>
 #include <sys/types.h>
 
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
 #include <linux/rockchip_ion.h>
+#endif
+
 #include <ion/ion.h>
 
 int ion_open()
@@ -177,6 +180,8 @@ int ion_sync_fd(int fd, int handle_fd)
     return ion_ioctl(fd, ION_IOC_SYNC, &data);
 }
 
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
+ddddddd;
 int ion_get_phys(int fd, ion_user_handle_t handle, unsigned long *phys)
 {
     struct ion_phys_data phys_data;
@@ -230,3 +235,6 @@ int ion_secure_alloc(int fd, size_t len, unsigned long *phys)
     *phys = phys_data.phys;
     return ret;
 }
+#else
+asdfasdf;
+#endif
diff --git a/libion/ion_test.c b/libion/ion_test.c
index 2e93146..c9d33d6 100644
--- a/libion/ion_test.c
+++ b/libion/ion_test.c
@@ -70,6 +70,7 @@ void ion_alloc_test()
     printf("ion alloc test: passed\n");
 }
 
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
 int _ion_secure_alloc_test(int *fd, size_t len, unsigned long *phys)
 {
     int ret;
@@ -106,6 +107,7 @@ void ion_secure_alloc_test()
     printf("ion secure alloc test: passed\n");
     return;
 }
+#endif
 
 void ion_map_test()
 {
@@ -250,7 +252,12 @@ void ion_share_test()
 int main(int argc, char* argv[]) {
     int c;
     enum tests {
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
         ALLOC_TEST = 0, MAP_TEST, SHARE_TEST, SECURE_ALLOC_TEST,
+#else
+        ALLOC_TEST = 0, MAP_TEST, SHARE_TEST,
+#endif
+
     };
 
     while (1) {
@@ -264,7 +271,9 @@ int main(int argc, char* argv[]) {
             {"align", required_argument, 0, 'g'},
             {"map_flags", required_argument, 0, 'z'},
             {"prot", required_argument, 0, 'p'},
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
             {"secure_alloc", no_argument, 0, 'e'},
+#endif
         };
         int i = 0;
         c = getopt_long(argc, argv, "af:h:l:mr:ste", opts, &i);
@@ -299,9 +308,11 @@ int main(int argc, char* argv[]) {
         case 'a':
             test = ALLOC_TEST;
             break;
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
         case 'e':
             test = SECURE_ALLOC_TEST;
             break;
+#endif
         case 'm':
             test = MAP_TEST;
             break;
@@ -317,9 +328,11 @@ int main(int argc, char* argv[]) {
         case ALLOC_TEST:
             ion_alloc_test();
             break;
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
         case SECURE_ALLOC_TEST:
             ion_secure_alloc_test();
             break;
+#endif
         case MAP_TEST:
             ion_map_test();
             break;
@@ -327,7 +340,11 @@ int main(int argc, char* argv[]) {
             ion_share_test();
             break;
         default:
+#ifdef ROCKCHIP_GPU_LIB_ENABLE
             printf("must specify a test (alloc, map, share, securealloc)\n");
+#else
+            printf("must specify a test (alloc, map, share)\n");
+#endif
     }
     return 0;
 }
