
test:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36                   	ss
  40024b:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 18                	add    %bl,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 ba ac ff 94 4c    	add    %bh,0x4c94ffac(%rdx)
  400289:	fd                   	std    
  40028a:	3c db                	cmp    $0xdb,%al
  40028c:	f5                   	cmc    
  40028d:	8c 10                	mov    %ss,(%rax)
  40028f:	4f 7c 7d             	rex.WRXB jl 40030f <_init-0xb9>
  400292:	c4                   	(bad)  
  400293:	60                   	(bad)  
  400294:	41 00 dc             	add    %bl,%r12b
  400297:	4b                   	rex.WXB

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	1a 00                	sbb    (%rax),%al
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	21 00                	and    %eax,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	01 00                	add    %eax,(%rax)
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40031b:	67 6d                	insl   (%dx),%es:(%edi)
  40031d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40031e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40031f:	5f                   	pop    %rdi
  400320:	73 74                	jae    400396 <_init-0x32>
  400322:	61                   	(bad)  
  400323:	72 74                	jb     400399 <_init-0x2f>
  400325:	5f                   	pop    %rdi
  400326:	5f                   	pop    %rdi
  400327:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40032b:	63 2e                	movslq (%rsi),%ebp
  40032d:	73 6f                	jae    40039e <_init-0x2a>
  40032f:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  400334:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40033b:	6c                   	insb   (%dx),%es:(%rdi)
  40033c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400343:	72 74                	jb     4003b9 <_init-0xf>
  400345:	5f                   	pop    %rdi
  400346:	6d                   	insl   (%dx),%es:(%rdi)
  400347:	61                   	(bad)  
  400348:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40034f:	43 5f                	rex.XB pop %r15
  400351:	32 2e                	xor    (%rsi),%ch
  400353:	32 2e                	xor    (%rsi),%ch
  400355:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	10 00                	adc    %al,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	33 00                	xor    (%rax),%eax
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	e0 0f                	loopne 400391 <_init-0x37>
  400382:	60                   	(bad)  
  400383:	00 00                	add    %al,(%rax)
  400385:	00 00                	add    %al,(%rax)
  400387:	00 06                	add    %al,(%rsi)
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

0000000000400398 <.rela.plt>:
  400398:	00 10                	add    %dl,(%rax)
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    %al,(%rax)
  40039d:	00 00                	add    %al,(%rax)
  40039f:	00 07                	add    %al,(%rdi)
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 01                	add    %al,(%rcx)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 08                	add    %cl,(%rax)
  4003b1:	10 60 00             	adc    %ah,0x0(%rax)
  4003b4:	00 00                	add    %al,(%rax)
  4003b6:	00 00                	add    %al,(%rax)
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	e8 6b 00 00 00       	callq  40043c <call_gmon_start>
  4003d1:	e8 fa 00 00 00       	callq  4004d0 <frame_dummy>
  4003d6:	e8 b5 03 00 00       	callq  400790 <__do_global_ctors_aux>
  4003db:	48 83 c4 08          	add    $0x8,%rsp
  4003df:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <printf@plt-0x10>:
  4003e0:	ff 35 0a 0c 20 00    	pushq  0x200c0a(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 0c 0c 20 00    	jmpq   *0x200c0c(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <_init+0x18>

0000000000400400 <__libc_start_main@plt>:
  400400:	ff 25 02 0c 20 00    	jmpq   *0x200c02(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400406:	68 01 00 00 00       	pushq  $0x1
  40040b:	e9 d0 ff ff ff       	jmpq   4003e0 <_init+0x18>

Disassembly of section .text:

0000000000400410 <_start>:
  400410:	31 ed                	xor    %ebp,%ebp
  400412:	49 89 d1             	mov    %rdx,%r9
  400415:	5e                   	pop    %rsi
  400416:	48 89 e2             	mov    %rsp,%rdx
  400419:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40041d:	50                   	push   %rax
  40041e:	54                   	push   %rsp
  40041f:	49 c7 c0 80 07 40 00 	mov    $0x400780,%r8
  400426:	48 c7 c1 f0 06 40 00 	mov    $0x4006f0,%rcx
  40042d:	48 c7 c7 38 06 40 00 	mov    $0x400638,%rdi
  400434:	e8 c7 ff ff ff       	callq  400400 <__libc_start_main@plt>
  400439:	f4                   	hlt    
  40043a:	90                   	nop
  40043b:	90                   	nop

000000000040043c <call_gmon_start>:
  40043c:	48 83 ec 08          	sub    $0x8,%rsp
  400440:	48 8b 05 99 0b 20 00 	mov    0x200b99(%rip),%rax        # 600fe0 <_DYNAMIC+0x190>
  400447:	48 85 c0             	test   %rax,%rax
  40044a:	74 02                	je     40044e <call_gmon_start+0x12>
  40044c:	ff d0                	callq  *%rax
  40044e:	48 83 c4 08          	add    $0x8,%rsp
  400452:	c3                   	retq   
  400453:	90                   	nop
  400454:	90                   	nop
  400455:	90                   	nop
  400456:	90                   	nop
  400457:	90                   	nop
  400458:	90                   	nop
  400459:	90                   	nop
  40045a:	90                   	nop
  40045b:	90                   	nop
  40045c:	90                   	nop
  40045d:	90                   	nop
  40045e:	90                   	nop
  40045f:	90                   	nop

0000000000400460 <__do_global_dtors_aux>:
  400460:	55                   	push   %rbp
  400461:	48 89 e5             	mov    %rsp,%rbp
  400464:	53                   	push   %rbx
  400465:	48 83 ec 08          	sub    $0x8,%rsp
  400469:	80 3d b0 0b 20 00 00 	cmpb   $0x0,0x200bb0(%rip)        # 601020 <__bss_start>
  400470:	75 4b                	jne    4004bd <__do_global_dtors_aux+0x5d>
  400472:	bb 40 0e 60 00       	mov    $0x600e40,%ebx
  400477:	48 8b 05 aa 0b 20 00 	mov    0x200baa(%rip),%rax        # 601028 <dtor_idx.6533>
  40047e:	48 81 eb 38 0e 60 00 	sub    $0x600e38,%rbx
  400485:	48 c1 fb 03          	sar    $0x3,%rbx
  400489:	48 83 eb 01          	sub    $0x1,%rbx
  40048d:	48 39 d8             	cmp    %rbx,%rax
  400490:	73 24                	jae    4004b6 <__do_global_dtors_aux+0x56>
  400492:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400498:	48 83 c0 01          	add    $0x1,%rax
  40049c:	48 89 05 85 0b 20 00 	mov    %rax,0x200b85(%rip)        # 601028 <dtor_idx.6533>
  4004a3:	ff 14 c5 38 0e 60 00 	callq  *0x600e38(,%rax,8)
  4004aa:	48 8b 05 77 0b 20 00 	mov    0x200b77(%rip),%rax        # 601028 <dtor_idx.6533>
  4004b1:	48 39 d8             	cmp    %rbx,%rax
  4004b4:	72 e2                	jb     400498 <__do_global_dtors_aux+0x38>
  4004b6:	c6 05 63 0b 20 00 01 	movb   $0x1,0x200b63(%rip)        # 601020 <__bss_start>
  4004bd:	48 83 c4 08          	add    $0x8,%rsp
  4004c1:	5b                   	pop    %rbx
  4004c2:	5d                   	pop    %rbp
  4004c3:	c3                   	retq   
  4004c4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4004cb:	00 00 00 00 00 

00000000004004d0 <frame_dummy>:
  4004d0:	48 83 3d 70 09 20 00 	cmpq   $0x0,0x200970(%rip)        # 600e48 <__JCR_END__>
  4004d7:	00 
  4004d8:	55                   	push   %rbp
  4004d9:	48 89 e5             	mov    %rsp,%rbp
  4004dc:	74 12                	je     4004f0 <frame_dummy+0x20>
  4004de:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e3:	48 85 c0             	test   %rax,%rax
  4004e6:	74 08                	je     4004f0 <frame_dummy+0x20>
  4004e8:	5d                   	pop    %rbp
  4004e9:	bf 48 0e 60 00       	mov    $0x600e48,%edi
  4004ee:	ff e0                	jmpq   *%rax
  4004f0:	5d                   	pop    %rbp
  4004f1:	c3                   	retq   
  4004f2:	90                   	nop
  4004f3:	90                   	nop

00000000004004f4 <myadd>:
  4004f4:	55                   	push   %rbp
  4004f5:	48 89 e5             	mov    %rsp,%rbp
  4004f8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4004ff:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  400506:	00 
  400507:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40050e:	eb 1e                	jmp    40052e <myadd+0x3a>
  400510:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400513:	8b 55 f8             	mov    -0x8(%rbp),%edx
  400516:	01 d0                	add    %edx,%eax
  400518:	48 98                	cltq   
  40051a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40051e:	48 0f af c2          	imul   %rdx,%rax
  400522:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400526:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40052a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40052e:	81 7d f8 0f 27 00 00 	cmpl   $0x270f,-0x8(%rbp)
  400535:	7e d9                	jle    400510 <myadd+0x1c>
  400537:	5d                   	pop    %rbp
  400538:	c3                   	retq   

0000000000400539 <func>:
  400539:	55                   	push   %rbp
  40053a:	48 89 e5             	mov    %rsp,%rbp
  40053d:	48 83 ec 28          	sub    $0x28,%rsp
  400541:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400544:	89 75 e8             	mov    %esi,-0x18(%rbp)
  400547:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  40054a:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  40054d:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  400551:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  400558:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40055f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  400566:	eb 18                	jmp    400580 <func+0x47>
  400568:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40056b:	0f af 45 fc          	imul   -0x4(%rbp),%eax
  40056f:	01 45 ec             	add    %eax,-0x14(%rbp)
  400572:	b8 00 00 00 00       	mov    $0x0,%eax
  400577:	e8 78 ff ff ff       	callq  4004f4 <myadd>
  40057c:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  400580:	81 7d f8 cf 07 00 00 	cmpl   $0x7cf,-0x8(%rbp)
  400587:	7e df                	jle    400568 <func+0x2f>
  400589:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40058c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40058f:	01 d0                	add    %edx,%eax
  400591:	03 45 e4             	add    -0x1c(%rbp),%eax
  400594:	03 45 e0             	add    -0x20(%rbp),%eax
  400597:	03 45 dc             	add    -0x24(%rbp),%eax
  40059a:	c9                   	leaveq 
  40059b:	c3                   	retq   

000000000040059c <test_as>:
  40059c:	55                   	push   %rbp
  40059d:	48 89 e5             	mov    %rsp,%rbp
  4005a0:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4005a3:	c7 45 fc 64 00 00 00 	movl   $0x64,-0x4(%rbp)
  4005aa:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
  4005ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4005b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4005b6:	8b 00                	mov    (%rax),%eax
  4005b8:	03 45 fc             	add    -0x4(%rbp),%eax
  4005bb:	5d                   	pop    %rbp
  4005bc:	c3                   	retq   

00000000004005bd <args>:
  4005bd:	55                   	push   %rbp
  4005be:	48 89 e5             	mov    %rsp,%rbp
  4005c1:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4005c4:	89 75 e8             	mov    %esi,-0x18(%rbp)
  4005c7:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  4005ca:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  4005cd:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  4005d1:	44 89 4d d8          	mov    %r9d,-0x28(%rbp)
  4005d5:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4005d8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4005db:	01 d0                	add    %edx,%eax
  4005dd:	03 45 e4             	add    -0x1c(%rbp),%eax
  4005e0:	03 45 e0             	add    -0x20(%rbp),%eax
  4005e3:	03 45 dc             	add    -0x24(%rbp),%eax
  4005e6:	03 45 d8             	add    -0x28(%rbp),%eax
  4005e9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4005ec:	8b 45 18             	mov    0x18(%rbp),%eax
  4005ef:	8b 55 10             	mov    0x10(%rbp),%edx
  4005f2:	01 d0                	add    %edx,%eax
  4005f4:	03 45 20             	add    0x20(%rbp),%eax
  4005f7:	03 45 28             	add    0x28(%rbp),%eax
  4005fa:	03 45 30             	add    0x30(%rbp),%eax
  4005fd:	03 45 38             	add    0x38(%rbp),%eax
  400600:	03 45 40             	add    0x40(%rbp),%eax
  400603:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400606:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400609:	0f af 45 f8          	imul   -0x8(%rbp),%eax
  40060d:	5d                   	pop    %rbp
  40060e:	c3                   	retq   

000000000040060f <div_zero>:
  40060f:	55                   	push   %rbp
  400610:	48 89 e5             	mov    %rsp,%rbp
  400613:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400616:	89 75 e8             	mov    %esi,-0x18(%rbp)
  400619:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40061c:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40061f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  400622:	89 45 f8             	mov    %eax,-0x8(%rbp)
  400625:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400628:	89 c2                	mov    %eax,%edx
  40062a:	c1 fa 1f             	sar    $0x1f,%edx
  40062d:	f7 7d e8             	idivl  -0x18(%rbp)
  400630:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400633:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400636:	5d                   	pop    %rbp
  400637:	c3                   	retq   

0000000000400638 <main>:
  400638:	55                   	push   %rbp
  400639:	48 89 e5             	mov    %rsp,%rbp
  40063c:	48 83 ec 10          	sub    $0x10,%rsp
  400640:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  400647:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40064a:	b8 dc 07 40 00       	mov    $0x4007dc,%eax
  40064f:	89 d6                	mov    %edx,%esi
  400651:	48 89 c7             	mov    %rax,%rdi
  400654:	b8 00 00 00 00       	mov    $0x0,%eax
  400659:	e8 92 fd ff ff       	callq  4003f0 <printf@plt>
  40065e:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
  400662:	83 e0 c3             	and    $0xffffffc3,%eax
  400665:	83 c8 34             	or     $0x34,%eax
  400668:	88 45 f1             	mov    %al,-0xf(%rbp)
  40066b:	0f b6 45 f2          	movzbl -0xe(%rbp),%eax
  40066f:	83 e0 f0             	and    $0xfffffff0,%eax
  400672:	83 c8 01             	or     $0x1,%eax
  400675:	88 45 f2             	mov    %al,-0xe(%rbp)
  400678:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  40067c:	83 c8 80             	or     $0xffffff80,%eax
  40067f:	88 45 f3             	mov    %al,-0xd(%rbp)
  400682:	8b 55 f0             	mov    -0x10(%rbp),%edx
  400685:	b8 e8 07 40 00       	mov    $0x4007e8,%eax
  40068a:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
  40068e:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi
  400692:	48 89 c7             	mov    %rax,%rdi
  400695:	b8 00 00 00 00       	mov    $0x0,%eax
  40069a:	e8 51 fd ff ff       	callq  4003f0 <printf@plt>
  40069f:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4006a2:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4006a5:	b8 f8 07 40 00       	mov    $0x4007f8,%eax
  4006aa:	89 ce                	mov    %ecx,%esi
  4006ac:	48 89 c7             	mov    %rax,%rdi
  4006af:	b8 00 00 00 00       	mov    $0x0,%eax
  4006b4:	e8 37 fd ff ff       	callq  4003f0 <printf@plt>
  4006b9:	41 b8 05 00 00 00    	mov    $0x5,%r8d
  4006bf:	b9 04 00 00 00       	mov    $0x4,%ecx
  4006c4:	ba 03 00 00 00       	mov    $0x3,%edx
  4006c9:	be 02 00 00 00       	mov    $0x2,%esi
  4006ce:	bf 01 00 00 00       	mov    $0x1,%edi
  4006d3:	e8 61 fe ff ff       	callq  400539 <func>
  4006d8:	be 00 00 00 00       	mov    $0x0,%esi
  4006dd:	bf 0a 00 00 00       	mov    $0xa,%edi
  4006e2:	e8 28 ff ff ff       	callq  40060f <div_zero>
  4006e7:	c9                   	leaveq 
  4006e8:	c3                   	retq   
  4006e9:	90                   	nop
  4006ea:	90                   	nop
  4006eb:	90                   	nop
  4006ec:	90                   	nop
  4006ed:	90                   	nop
  4006ee:	90                   	nop
  4006ef:	90                   	nop

00000000004006f0 <__libc_csu_init>:
  4006f0:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  4006f5:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  4006fa:	48 8d 2d 23 07 20 00 	lea    0x200723(%rip),%rbp        # 600e24 <__init_array_end>
  400701:	4c 8d 25 1c 07 20 00 	lea    0x20071c(%rip),%r12        # 600e24 <__init_array_end>
  400708:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40070d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400712:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400717:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40071c:	48 83 ec 38          	sub    $0x38,%rsp
  400720:	4c 29 e5             	sub    %r12,%rbp
  400723:	41 89 fd             	mov    %edi,%r13d
  400726:	49 89 f6             	mov    %rsi,%r14
  400729:	48 c1 fd 03          	sar    $0x3,%rbp
  40072d:	49 89 d7             	mov    %rdx,%r15
  400730:	e8 93 fc ff ff       	callq  4003c8 <_init>
  400735:	48 85 ed             	test   %rbp,%rbp
  400738:	74 1c                	je     400756 <__libc_csu_init+0x66>
  40073a:	31 db                	xor    %ebx,%ebx
  40073c:	0f 1f 40 00          	nopl   0x0(%rax)
  400740:	4c 89 fa             	mov    %r15,%rdx
  400743:	4c 89 f6             	mov    %r14,%rsi
  400746:	44 89 ef             	mov    %r13d,%edi
  400749:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40074d:	48 83 c3 01          	add    $0x1,%rbx
  400751:	48 39 eb             	cmp    %rbp,%rbx
  400754:	75 ea                	jne    400740 <__libc_csu_init+0x50>
  400756:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40075b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400760:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400765:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40076a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40076f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400774:	48 83 c4 38          	add    $0x38,%rsp
  400778:	c3                   	retq   
  400779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400780 <__libc_csu_fini>:
  400780:	f3 c3                	repz retq 
  400782:	90                   	nop
  400783:	90                   	nop
  400784:	90                   	nop
  400785:	90                   	nop
  400786:	90                   	nop
  400787:	90                   	nop
  400788:	90                   	nop
  400789:	90                   	nop
  40078a:	90                   	nop
  40078b:	90                   	nop
  40078c:	90                   	nop
  40078d:	90                   	nop
  40078e:	90                   	nop
  40078f:	90                   	nop

0000000000400790 <__do_global_ctors_aux>:
  400790:	55                   	push   %rbp
  400791:	48 89 e5             	mov    %rsp,%rbp
  400794:	53                   	push   %rbx
  400795:	48 83 ec 08          	sub    $0x8,%rsp
  400799:	48 8b 05 88 06 20 00 	mov    0x200688(%rip),%rax        # 600e28 <__CTOR_LIST__>
  4007a0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4007a4:	74 19                	je     4007bf <__do_global_ctors_aux+0x2f>
  4007a6:	bb 28 0e 60 00       	mov    $0x600e28,%ebx
  4007ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4007b0:	48 83 eb 08          	sub    $0x8,%rbx
  4007b4:	ff d0                	callq  *%rax
  4007b6:	48 8b 03             	mov    (%rbx),%rax
  4007b9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4007bd:	75 f1                	jne    4007b0 <__do_global_ctors_aux+0x20>
  4007bf:	48 83 c4 08          	add    $0x8,%rsp
  4007c3:	5b                   	pop    %rbx
  4007c4:	5d                   	pop    %rbp
  4007c5:	c3                   	retq   
  4007c6:	90                   	nop
  4007c7:	90                   	nop

Disassembly of section .fini:

00000000004007c8 <_fini>:
  4007c8:	48 83 ec 08          	sub    $0x8,%rsp
  4007cc:	e8 8f fc ff ff       	callq  400460 <__do_global_dtors_aux>
  4007d1:	48 83 c4 08          	add    $0x8,%rsp
  4007d5:	c3                   	retq   

Disassembly of section .rodata:

00000000004007d8 <_IO_stdin_used>:
  4007d8:	01 00                	add    %eax,(%rax)
  4007da:	02 00                	add    (%rax),%al
  4007dc:	76 61                	jbe    40083f <_IO_stdin_used+0x67>
  4007de:	6c                   	insb   (%dx),%es:(%rdi)
  4007df:	75 65                	jne    400846 <_IO_stdin_used+0x6e>
  4007e1:	3d 30 78 25 78       	cmp    $0x78257830,%eax
  4007e6:	0a 00                	or     (%rax),%al
  4007e8:	76 61                	jbe    40084b <_IO_stdin_used+0x73>
  4007ea:	6c                   	insb   (%dx),%es:(%rdi)
  4007eb:	75 65                	jne    400852 <_IO_stdin_used+0x7a>
  4007ed:	25 6e 3d 30 78       	and    $0x78303d6e,%eax
  4007f2:	25 78 25 6e 0a       	and    $0xa6e2578,%eax
  4007f7:	00 25 64 20 25 64    	add    %ah,0x64252064(%rip)        # 64652861 <_end+0x64051831>
  4007fd:	20 63 68             	and    %ah,0x68(%rbx)
  400800:	61                   	(bad)  
  400801:	72 73                	jb     400876 <_IO_stdin_used+0x9e>
  400803:	0a 00                	or     (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400808 <.eh_frame_hdr>:
  400808:	01 1b                	add    %ebx,(%rbx)
  40080a:	03 3b                	add    (%rbx),%edi
  40080c:	54                   	push   %rsp
  40080d:	00 00                	add    %al,(%rax)
  40080f:	00 09                	add    %cl,(%rcx)
  400811:	00 00                	add    %al,(%rax)
  400813:	00 d8                	add    %bl,%al
  400815:	fb                   	sti    
  400816:	ff                   	(bad)  
  400817:	ff 70 00             	pushq  0x0(%rax)
  40081a:	00 00                	add    %al,(%rax)
  40081c:	ec                   	in     (%dx),%al
  40081d:	fc                   	cld    
  40081e:	ff                   	(bad)  
  40081f:	ff 98 00 00 00 31    	lcallq *0x31000000(%rax)
  400825:	fd                   	std    
  400826:	ff                   	(bad)  
  400827:	ff                   	(bad)  
  400828:	b8 00 00 00 94       	mov    $0x94000000,%eax
  40082d:	fd                   	std    
  40082e:	ff                   	(bad)  
  40082f:	ff d8                	lcallq *<internal disassembler error>
  400831:	00 00                	add    %al,(%rax)
  400833:	00 b5 fd ff ff f8    	add    %dh,-0x7000003(%rbp)
  400839:	00 00                	add    %al,(%rax)
  40083b:	00 07                	add    %al,(%rdi)
  40083d:	fe                   	(bad)  
  40083e:	ff                   	(bad)  
  40083f:	ff 18                	lcallq *(%rax)
  400841:	01 00                	add    %eax,(%rax)
  400843:	00 30                	add    %dh,(%rax)
  400845:	fe                   	(bad)  
  400846:	ff                   	(bad)  
  400847:	ff                   	(bad)  
  400848:	38 01                	cmp    %al,(%rcx)
  40084a:	00 00                	add    %al,(%rax)
  40084c:	e8 fe ff ff 58       	callq  5940084f <_end+0x58dff81f>
  400851:	01 00                	add    %eax,(%rax)
  400853:	00 78 ff             	add    %bh,-0x1(%rax)
  400856:	ff                   	(bad)  
  400857:	ff                   	.byte 0xff
  400858:	80 01 00             	addb   $0x0,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000400860 <__FRAME_END__-0x140>:
  400860:	14 00                	adc    $0x0,%al
  400862:	00 00                	add    %al,(%rax)
  400864:	00 00                	add    %al,(%rax)
  400866:	00 00                	add    %al,(%rax)
  400868:	01 7a 52             	add    %edi,0x52(%rdx)
  40086b:	00 01                	add    %al,(%rcx)
  40086d:	78 10                	js     40087f <_IO_stdin_used+0xa7>
  40086f:	01 1b                	add    %ebx,(%rbx)
  400871:	0c 07                	or     $0x7,%al
  400873:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400879:	00 00                	add    %al,(%rax)
  40087b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40087e:	00 00                	add    %al,(%rax)
  400880:	60                   	(bad)  
  400881:	fb                   	sti    
  400882:	ff                   	(bad)  
  400883:	ff 30                	pushq  (%rax)
  400885:	00 00                	add    %al,(%rax)
  400887:	00 00                	add    %al,(%rax)
  400889:	0e                   	(bad)  
  40088a:	10 46 0e             	adc    %al,0xe(%rsi)
  40088d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400890:	0b 77 08             	or     0x8(%rdi),%esi
  400893:	80 00 3f             	addb   $0x3f,(%rax)
  400896:	1a 3b                	sbb    (%rbx),%bh
  400898:	2a 33                	sub    (%rbx),%dh
  40089a:	24 22                	and    $0x22,%al
  40089c:	00 00                	add    %al,(%rax)
  40089e:	00 00                	add    %al,(%rax)
  4008a0:	1c 00                	sbb    $0x0,%al
  4008a2:	00 00                	add    %al,(%rax)
  4008a4:	44 00 00             	add    %r8b,(%rax)
  4008a7:	00 4c fc ff          	add    %cl,-0x1(%rsp,%rdi,8)
  4008ab:	ff 45 00             	incl   0x0(%rbp)
  4008ae:	00 00                	add    %al,(%rax)
  4008b0:	00 41 0e             	add    %al,0xe(%rcx)
  4008b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008b9:	02 40 0c             	add    0xc(%rax),%al
  4008bc:	07                   	(bad)  
  4008bd:	08 00                	or     %al,(%rax)
  4008bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4008c2:	00 00                	add    %al,(%rax)
  4008c4:	64 00 00             	add    %al,%fs:(%rax)
  4008c7:	00 71 fc             	add    %dh,-0x4(%rcx)
  4008ca:	ff                   	(bad)  
  4008cb:	ff 63 00             	jmpq   *0x0(%rbx)
  4008ce:	00 00                	add    %al,(%rax)
  4008d0:	00 41 0e             	add    %al,0xe(%rcx)
  4008d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008d9:	02 5e 0c             	add    0xc(%rsi),%bl
  4008dc:	07                   	(bad)  
  4008dd:	08 00                	or     %al,(%rax)
  4008df:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4008e2:	00 00                	add    %al,(%rax)
  4008e4:	84 00                	test   %al,(%rax)
  4008e6:	00 00                	add    %al,(%rax)
  4008e8:	b4 fc                	mov    $0xfc,%ah
  4008ea:	ff                   	(bad)  
  4008eb:	ff 21                	jmpq   *(%rcx)
  4008ed:	00 00                	add    %al,(%rax)
  4008ef:	00 00                	add    %al,(%rax)
  4008f1:	41 0e                	rex.B (bad) 
  4008f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4008f9:	5c                   	pop    %rsp
  4008fa:	0c 07                	or     $0x7,%al
  4008fc:	08 00                	or     %al,(%rax)
  4008fe:	00 00                	add    %al,(%rax)
  400900:	1c 00                	sbb    $0x0,%al
  400902:	00 00                	add    %al,(%rax)
  400904:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  400905:	00 00                	add    %al,(%rax)
  400907:	00 b5 fc ff ff 52    	add    %dh,0x52fffffc(%rbp)
  40090d:	00 00                	add    %al,(%rax)
  40090f:	00 00                	add    %al,(%rax)
  400911:	41 0e                	rex.B (bad) 
  400913:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400919:	02 4d 0c             	add    0xc(%rbp),%cl
  40091c:	07                   	(bad)  
  40091d:	08 00                	or     %al,(%rax)
  40091f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400922:	00 00                	add    %al,(%rax)
  400924:	c4                   	(bad)  
  400925:	00 00                	add    %al,(%rax)
  400927:	00 e7                	add    %ah,%bh
  400929:	fc                   	cld    
  40092a:	ff                   	(bad)  
  40092b:	ff 29                	ljmpq  *(%rcx)
  40092d:	00 00                	add    %al,(%rax)
  40092f:	00 00                	add    %al,(%rax)
  400931:	41 0e                	rex.B (bad) 
  400933:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400939:	64                   	fs
  40093a:	0c 07                	or     $0x7,%al
  40093c:	08 00                	or     %al,(%rax)
  40093e:	00 00                	add    %al,(%rax)
  400940:	1c 00                	sbb    $0x0,%al
  400942:	00 00                	add    %al,(%rax)
  400944:	e4 00                	in     $0x0,%al
  400946:	00 00                	add    %al,(%rax)
  400948:	f0 fc                	lock cld 
  40094a:	ff                   	(bad)  
  40094b:	ff b1 00 00 00 00    	pushq  0x0(%rcx)
  400951:	41 0e                	rex.B (bad) 
  400953:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400959:	02 ac 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%ch
  400960:	24 00                	and    $0x0,%al
  400962:	00 00                	add    %al,(%rax)
  400964:	04 01                	add    $0x1,%al
  400966:	00 00                	add    %al,(%rax)
  400968:	88 fd                	mov    %bh,%ch
  40096a:	ff                   	(bad)  
  40096b:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  400971:	51                   	push   %rcx
  400972:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0ffe <_end+0xe3effce>
  400978:	40 83 07 8f          	rex addl $0xffffff8f,(%rdi)
  40097c:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  400982:	58                   	pop    %rax
  400983:	0e                   	(bad)  
  400984:	08 00                	or     %al,(%rax)
  400986:	00 00                	add    %al,(%rax)
  400988:	14 00                	adc    $0x0,%al
  40098a:	00 00                	add    %al,(%rax)
  40098c:	2c 01                	sub    $0x1,%al
  40098e:	00 00                	add    %al,(%rax)
  400990:	f0 fd                	lock std 
  400992:	ff                   	(bad)  
  400993:	ff 02                	incl   (%rdx)
	...

00000000004009a0 <__FRAME_END__>:
  4009a0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000600e28 <__CTOR_LIST__>:
  600e28:	ff                   	(bad)  
  600e29:	ff                   	(bad)  
  600e2a:	ff                   	(bad)  
  600e2b:	ff                   	(bad)  
  600e2c:	ff                   	(bad)  
  600e2d:	ff                   	(bad)  
  600e2e:	ff                   	(bad)  
  600e2f:	ff 00                	incl   (%rax)

0000000000600e30 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000600e38 <__DTOR_LIST__>:
  600e38:	ff                   	(bad)  
  600e39:	ff                   	(bad)  
  600e3a:	ff                   	(bad)  
  600e3b:	ff                   	(bad)  
  600e3c:	ff                   	(bad)  
  600e3d:	ff                   	(bad)  
  600e3e:	ff                   	(bad)  
  600e3f:	ff 00                	incl   (%rax)

0000000000600e40 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600e48 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e50 <_DYNAMIC>:
  600e50:	01 00                	add    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	10 00                	adc    %al,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	0c 00                	or     $0x0,%al
  600e62:	00 00                	add    %al,(%rax)
  600e64:	00 00                	add    %al,(%rax)
  600e66:	00 00                	add    %al,(%rax)
  600e68:	c8 03 40 00          	enterq $0x4003,$0x0
  600e6c:	00 00                	add    %al,(%rax)
  600e6e:	00 00                	add    %al,(%rax)
  600e70:	0d 00 00 00 00       	or     $0x0,%eax
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 c8                	add    %cl,%al
  600e79:	07                   	(bad)  
  600e7a:	40 00 00             	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 f5                	add    %dh,%ch
  600e81:	fe                   	(bad)  
  600e82:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e8d:	00 00                	add    %al,(%rax)
  600e8f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600e95 <_DYNAMIC+0x45>
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 18                	add    %bl,(%rax)
  600e99:	03 40 00             	add    0x0(%rax),%eax
  600e9c:	00 00                	add    %al,(%rax)
  600e9e:	00 00                	add    %al,(%rax)
  600ea0:	06                   	(bad)  
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 0a                	add    %cl,(%rdx)
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 3f                	add    %bh,(%rdi)
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0b                	add    %cl,(%rbx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 18                	add    %bl,(%rax)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ed5 <_DYNAMIC+0x85>
	...
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 03                	add    %al,(%rbx)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 e8                	add    %ch,%al
  600ee9:	0f 60 00             	punpcklbw (%rax),%mm0
  600eec:	00 00                	add    %al,(%rax)
  600eee:	00 00                	add    %al,(%rax)
  600ef0:	02 00                	add    (%rax),%al
  600ef2:	00 00                	add    %al,(%rax)
  600ef4:	00 00                	add    %al,(%rax)
  600ef6:	00 00                	add    %al,(%rax)
  600ef8:	30 00                	xor    %al,(%rax)
  600efa:	00 00                	add    %al,(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	14 00                	adc    $0x0,%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	07                   	(bad)  
  600f09:	00 00                	add    %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 17                	add    %dl,(%rdi)
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 07                	add    %al,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 08                	add    %cl,(%rax)
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 18                	add    %bl,(%rax)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 09                	add    %cl,(%rcx)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 18                	add    %bl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 fe                	add    %bh,%dh
  600f51:	ff                   	(bad)  
  600f52:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 60 03             	add    %ah,0x3(%rax)
  600f5a:	40 00 00             	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 ff                	add    %bh,%bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 01                	add    %al,(%rcx)
  600f69:	00 00                	add    %al,(%rax)
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 f0                	add    %dh,%al
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 58 03             	add    %bl,0x3(%rax)
  600f7a:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600fe0 <.got>:
	...

Disassembly of section .got.plt:

0000000000600fe8 <_GLOBAL_OFFSET_TABLE_>:
  600fe8:	50                   	push   %rax
  600fe9:	0e                   	(bad)  
  600fea:	60                   	(bad)  
	...
  600fff:	00 f6                	add    %dh,%dh
  601001:	03 40 00             	add    0x0(%rax),%eax
  601004:	00 00                	add    %al,(%rax)
  601006:	00 00                	add    %al,(%rax)
  601008:	06                   	(bad)  
  601009:	04 40                	add    $0x40,%al
  60100b:	00 00                	add    %al,(%rax)
  60100d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601010 <__data_start>:
	...

0000000000601018 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601020 <completed.6531>:
	...

0000000000601028 <dtor_idx.6533>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	2f                   	(bad)  
   d:	4c 69 6e 61 72 6f 20 	imul   $0x34206f72,0x61(%rsi),%r13
  14:	34 
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531(%rip),%ebp        # 7562754f <_end+0x7502651f>
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%rsi),(%dx)
  1f:	74 75                	je     96 <_init-0x400332>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%rax),%eax
